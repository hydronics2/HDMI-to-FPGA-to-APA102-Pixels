/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module edid_rom_72 (
    input clk,
    input rst,
    inout sda,
    input scl
  );
  
  
  
  wire [1-1:0] M_i2c_start;
  wire [1-1:0] M_i2c_stop;
  wire [1-1:0] M_i2c_write;
  wire [8-1:0] M_i2c_rx_data;
  wire [1-1:0] M_i2c_rx_valid;
  wire [1-1:0] M_i2c_next;
  wire [1-1:0] M_i2c_ack;
  wire [1-1:0] M_i2c_enabled;
  reg [1-1:0] M_i2c_tx_enable;
  reg [8-1:0] M_i2c_tx_data;
  i2c_slave_91 i2c (
    .clk(clk),
    .rst(rst),
    .sda(sda),
    .scl(scl),
    .tx_enable(M_i2c_tx_enable),
    .tx_data(M_i2c_tx_data),
    .start(M_i2c_start),
    .stop(M_i2c_stop),
    .write(M_i2c_write),
    .rx_data(M_i2c_rx_data),
    .rx_valid(M_i2c_rx_valid),
    .next(M_i2c_next),
    .ack(M_i2c_ack),
    .enabled(M_i2c_enabled)
  );
  reg [7:0] M_addr_d, M_addr_q = 1'h0;
  reg M_tx_enable_d, M_tx_enable_q = 1'h0;
  
  always @* begin
    M_tx_enable_d = M_tx_enable_q;
    M_addr_d = M_addr_q;
    
    if (M_i2c_start) begin
      M_tx_enable_d = !M_i2c_write;
    end
    if (M_i2c_next) begin
      M_addr_d = M_addr_q + 1'h1;
    end
    if (M_i2c_rx_valid) begin
      M_addr_d = M_i2c_rx_data[0+6-:7];
    end
    M_i2c_tx_enable = M_tx_enable_q;
    M_i2c_tx_data = 8'hff;
    
    case (M_addr_q)
      8'h00: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h01: begin
        M_i2c_tx_data = 8'hff;
      end
      8'h02: begin
        M_i2c_tx_data = 8'hff;
      end
      8'h03: begin
        M_i2c_tx_data = 8'hff;
      end
      8'h04: begin
        M_i2c_tx_data = 8'hff;
      end
      8'h05: begin
        M_i2c_tx_data = 8'hff;
      end
      8'h06: begin
        M_i2c_tx_data = 8'hff;
      end
      8'h07: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h08: begin
        M_i2c_tx_data = 8'h04;
      end
      8'h09: begin
        M_i2c_tx_data = 8'h69;
      end
      8'h0a: begin
        M_i2c_tx_data = 8'ha3;
      end
      8'h0b: begin
        M_i2c_tx_data = 8'h28;
      end
      8'h0c: begin
        M_i2c_tx_data = 8'h4c;
      end
      8'h0d: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h0e: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h0f: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h10: begin
        M_i2c_tx_data = 8'h18;
      end
      8'h11: begin
        M_i2c_tx_data = 8'h18;
      end
      8'h12: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h13: begin
        M_i2c_tx_data = 8'h03;
      end
      8'h14: begin
        M_i2c_tx_data = 8'ha5;
      end
      8'h15: begin
        M_i2c_tx_data = 8'h3e;
      end
      8'h16: begin
        M_i2c_tx_data = 8'h22;
      end
      8'h17: begin
        M_i2c_tx_data = 8'h78;
      end
      8'h18: begin
        M_i2c_tx_data = 8'h3a;
      end
      8'h19: begin
        M_i2c_tx_data = 8'h1c;
      end
      8'h1a: begin
        M_i2c_tx_data = 8'hb5;
      end
      8'h1b: begin
        M_i2c_tx_data = 8'ha3;
      end
      8'h1c: begin
        M_i2c_tx_data = 8'h57;
      end
      8'h1d: begin
        M_i2c_tx_data = 8'h4f;
      end
      8'h1e: begin
        M_i2c_tx_data = 8'ha0;
      end
      8'h1f: begin
        M_i2c_tx_data = 8'h27;
      end
      8'h20: begin
        M_i2c_tx_data = 8'h0d;
      end
      8'h21: begin
        M_i2c_tx_data = 8'h50;
      end
      8'h22: begin
        M_i2c_tx_data = 8'h54;
      end
      8'h23: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h24: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h25: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h26: begin
        M_i2c_tx_data = 8'h81;
      end
      8'h27: begin
        M_i2c_tx_data = 8'hc0;
      end
      8'h28: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h29: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h2a: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h2b: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h2c: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h2d: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h2e: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h2f: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h30: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h31: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h32: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h33: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h34: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h35: begin
        M_i2c_tx_data = 8'h01;
      end
      8'h36: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h37: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h38: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h39: begin
        M_i2c_tx_data = 8'hfe;
      end
      8'h3a: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h3b: begin
        M_i2c_tx_data = 7'h44;
      end
      8'h3c: begin
        M_i2c_tx_data = 7'h75;
      end
      8'h3d: begin
        M_i2c_tx_data = 7'h6d;
      end
      8'h3e: begin
        M_i2c_tx_data = 7'h6d;
      end
      8'h3f: begin
        M_i2c_tx_data = 7'h79;
      end
      8'h40: begin
        M_i2c_tx_data = 6'h20;
      end
      8'h41: begin
        M_i2c_tx_data = 7'h54;
      end
      8'h42: begin
        M_i2c_tx_data = 7'h65;
      end
      8'h43: begin
        M_i2c_tx_data = 7'h78;
      end
      8'h44: begin
        M_i2c_tx_data = 7'h74;
      end
      8'h45: begin
        M_i2c_tx_data = 8'h0a;
      end
      8'h46: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h47: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h48: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h49: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h4a: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h4b: begin
        M_i2c_tx_data = 8'hff;
      end
      8'h4c: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h4d: begin
        M_i2c_tx_data = 8'h41;
      end
      8'h4e: begin
        M_i2c_tx_data = 8'h53;
      end
      8'h4f: begin
        M_i2c_tx_data = 8'h55;
      end
      8'h50: begin
        M_i2c_tx_data = 8'h53;
      end
      8'h51: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h52: begin
        M_i2c_tx_data = 8'h50;
      end
      8'h53: begin
        M_i2c_tx_data = 8'h42;
      end
      8'h54: begin
        M_i2c_tx_data = 8'h32;
      end
      8'h55: begin
        M_i2c_tx_data = 8'h38;
      end
      8'h56: begin
        M_i2c_tx_data = 8'h37;
      end
      8'h57: begin
        M_i2c_tx_data = 8'h51;
      end
      8'h58: begin
        M_i2c_tx_data = 8'h0a;
      end
      8'h59: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h5a: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h5b: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h5c: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h5d: begin
        M_i2c_tx_data = 8'hfd;
      end
      8'h5e: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h5f: begin
        M_i2c_tx_data = 8'h1e;
      end
      8'h60: begin
        M_i2c_tx_data = 8'h50;
      end
      8'h61: begin
        M_i2c_tx_data = 8'h18;
      end
      8'h62: begin
        M_i2c_tx_data = 8'ha0;
      end
      8'h63: begin
        M_i2c_tx_data = 8'h09;
      end
      8'h64: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h65: begin
        M_i2c_tx_data = 8'h0a;
      end
      8'h66: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h67: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h68: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h69: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h6a: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h6b: begin
        M_i2c_tx_data = 8'h20;
      end
      8'h6c: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h6d: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h6e: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h6f: begin
        M_i2c_tx_data = 8'hfc;
      end
      8'h70: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h71: begin
        M_i2c_tx_data = 7'h4d;
      end
      8'h72: begin
        M_i2c_tx_data = 7'h6f;
      end
      8'h73: begin
        M_i2c_tx_data = 7'h6a;
      end
      8'h74: begin
        M_i2c_tx_data = 7'h6f;
      end
      8'h75: begin
        M_i2c_tx_data = 6'h20;
      end
      8'h76: begin
        M_i2c_tx_data = 7'h4d;
      end
      8'h77: begin
        M_i2c_tx_data = 7'h6f;
      end
      8'h78: begin
        M_i2c_tx_data = 7'h6e;
      end
      8'h79: begin
        M_i2c_tx_data = 7'h69;
      end
      8'h7a: begin
        M_i2c_tx_data = 7'h74;
      end
      8'h7b: begin
        M_i2c_tx_data = 7'h6f;
      end
      8'h7c: begin
        M_i2c_tx_data = 7'h72;
      end
      8'h7d: begin
        M_i2c_tx_data = 8'h0a;
      end
      8'h7e: begin
        M_i2c_tx_data = 8'h00;
      end
      8'h7f: begin
        M_i2c_tx_data = 8'hfa;
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_addr_q <= 1'h0;
      M_tx_enable_q <= 1'h0;
    end else begin
      M_addr_q <= M_addr_d;
      M_tx_enable_q <= M_tx_enable_d;
    end
  end
  
endmodule
